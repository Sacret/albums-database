<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSetAlbums" targetNamespace="http://tempuri.org/DataSetAlbums.xsd" xmlns:mstns="http://tempuri.org/DataSetAlbums.xsd" xmlns="http://tempuri.org/DataSetAlbums.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DataBase.Properties.Settings.GlobalReference.Default.DatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableAlbumTableAdapter" GeneratorDataComponentClassName="TableAlbumTableAdapter" Name="TableAlbum" UserDataComponentName="TableAlbumTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableAlbum" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [TableAlbum] WHERE (([AlbumName] = @Original_AlbumName) AND ([AlbumYear] = @Original_AlbumYear) AND ((@IsNull_AlbumQSongs = 1 AND [AlbumQSongs] IS NULL) OR ([AlbumQSongs] = @Original_AlbumQSongs)) AND ([GroupID] = @Original_GroupID) AND ([AlbumID] = @Original_AlbumID) AND ((@IsNull_CompanyID = 1 AND [CompanyID] IS NULL) OR ([CompanyID] = @Original_CompanyID)) AND ([StyleID] = @Original_StyleID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_AlbumName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumYear" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AlbumQSongs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AlbumQSongs" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumQSongs" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumQSongs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CompanyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [TableAlbum] ([AlbumName], [AlbumYear], [AlbumQSongs], [GroupID], [AlbumID], [CompanyID], [StyleID]) VALUES (@AlbumName, @AlbumYear, @AlbumQSongs, @GroupID, @AlbumID, @CompanyID, @StyleID);
SELECT AlbumName, AlbumYear, AlbumQSongs, GroupID, AlbumID, CompanyID, StyleID FROM TableAlbum WHERE (AlbumID = @AlbumID) ORDER BY AlbumYear</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@AlbumName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@AlbumYear" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@AlbumQSongs" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumQSongs" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AlbumName, AlbumYear, AlbumQSongs, GroupID, AlbumID, CompanyID, StyleID
FROM         TableAlbum
ORDER BY AlbumYear</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [TableAlbum] SET [AlbumName] = @AlbumName, [AlbumYear] = @AlbumYear, [AlbumQSongs] = @AlbumQSongs, [GroupID] = @GroupID, [AlbumID] = @AlbumID, [CompanyID] = @CompanyID, [StyleID] = @StyleID WHERE (([AlbumName] = @Original_AlbumName) AND ([AlbumYear] = @Original_AlbumYear) AND ((@IsNull_AlbumQSongs = 1 AND [AlbumQSongs] IS NULL) OR ([AlbumQSongs] = @Original_AlbumQSongs)) AND ([GroupID] = @Original_GroupID) AND ([AlbumID] = @Original_AlbumID) AND ((@IsNull_CompanyID = 1 AND [CompanyID] IS NULL) OR ([CompanyID] = @Original_CompanyID)) AND ([StyleID] = @Original_StyleID));
SELECT AlbumName, AlbumYear, AlbumQSongs, GroupID, AlbumID, CompanyID, StyleID FROM TableAlbum WHERE (AlbumID = @AlbumID) ORDER BY AlbumYear</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@AlbumName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@AlbumYear" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@AlbumQSongs" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumQSongs" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_AlbumName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumYear" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AlbumQSongs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AlbumQSongs" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumQSongs" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumQSongs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CompanyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AlbumName" DataSetColumn="AlbumName" />
              <Mapping SourceColumn="AlbumYear" DataSetColumn="AlbumYear" />
              <Mapping SourceColumn="AlbumQSongs" DataSetColumn="AlbumQSongs" />
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="AlbumID" DataSetColumn="AlbumID" />
              <Mapping SourceColumn="CompanyID" DataSetColumn="CompanyID" />
              <Mapping SourceColumn="StyleID" DataSetColumn="StyleID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>BEGIN TRANSACTION
DELETE FROM [TableSong] WHERE (([AlbumID] = @Original_AlbumID))
DELETE FROM [TableAlbum] WHERE (([AlbumID] = @Original_AlbumID))
COMMIT TRANSACTION</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_AlbumID" ColumnName="AlbumID" DataSourceName="" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableAlbum" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy7" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy7" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy7" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AlbumName, AlbumYear, AlbumQSongs, GroupID, AlbumID, CompanyID, StyleID
FROM         TableAlbum
WHERE CompanyID = @CompanyID
ORDER BY AlbumYear</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="CompanyID" ColumnName="CompanyID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableAlbum" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy8" GeneratorSourceName="FillBy1" GetMethodModifier="Public" GetMethodName="GetDataBy8" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy8" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     AlbumName, AlbumYear, AlbumQSongs, GroupID, AlbumID, CompanyID, StyleID
FROM         TableAlbum
WHERE StyleID = @StyleID
ORDER BY AlbumYear</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StyleID" ColumnName="StyleID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO TableAlbum
                      (AlbumName, AlbumYear, AlbumQSongs, GroupID, AlbumID, CompanyID, StyleID)
VALUES     (@AlbumName,@AlbumYear,@AlbumQSongs,@GroupID,@AlbumID,@CompanyID,@StyleID); 
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AlbumName" ColumnName="AlbumName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@AlbumName" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AlbumYear" ColumnName="AlbumYear" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@AlbumYear" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="AlbumQSongs" ColumnName="AlbumQSongs" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@AlbumQSongs" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumQSongs" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupID" ColumnName="GroupID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AlbumID" ColumnName="AlbumID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CompanyID" ColumnName="CompanyID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StyleID" ColumnName="StyleID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM TableAlbum</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery1" Modifier="Public" Name="ScalarQuery1" QueryType="Scalar" ScalarCallRetval="System.Int16, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="ScalarQuery1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT MAX(AlbumID) FROM TableAlbum</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery2" Modifier="Public" Name="ScalarQuery2" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="ScalarQuery2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM TableAlbum
WHERE     (GroupID = @GroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupID" ColumnName="GroupID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery3" Modifier="Public" Name="ScalarQuery3" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy6" UserSourceName="ScalarQuery3">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(AlbumID) FROM TableAlbum
WHERE CompanyID = @CompanyID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="CompanyID" ColumnName="CompanyID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery4" Modifier="Public" Name="ScalarQuery4" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy9" UserSourceName="ScalarQuery4">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(AlbumID) FROM TableAlbum
WHERE StyleID = @StyleID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StyleID" ColumnName="StyleID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy10" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [TableAlbum] SET [AlbumName] = @AlbumName, [AlbumYear] = @AlbumYear, [AlbumQSongs] = @AlbumQSongs, [CompanyID] = @CompanyID, [StyleID] = @StyleID WHERE (([AlbumID] = @Original_AlbumID));
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AlbumName" ColumnName="AlbumName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@AlbumName" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AlbumYear" ColumnName="AlbumYear" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@AlbumYear" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="AlbumQSongs" ColumnName="AlbumQSongs" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@AlbumQSongs" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumQSongs" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CompanyID" ColumnName="CompanyID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StyleID" ColumnName="StyleID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_AlbumID" ColumnName="AlbumID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableAlbum" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableCompanyTableAdapter" GeneratorDataComponentClassName="TableCompanyTableAdapter" Name="TableCompany" UserDataComponentName="TableCompanyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableCompany" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [TableCompany] WHERE (([CompanyName] = @Original_CompanyName) AND ([CompanyID] = @Original_CompanyID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_CompanyName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CompanyName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [TableCompany] ([CompanyName], [CompanyID]) VALUES (@CompanyName, @CompanyID);
SELECT CompanyName, CompanyID FROM TableCompany WHERE (CompanyID = @CompanyID) ORDER BY CompanyName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@CompanyName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CompanyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     CompanyName, CompanyID
FROM         TableCompany
ORDER BY CompanyName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [TableCompany] SET [CompanyName] = @CompanyName, [CompanyID] = @CompanyID WHERE (([CompanyName] = @Original_CompanyName) AND ([CompanyID] = @Original_CompanyID));
SELECT CompanyName, CompanyID FROM TableCompany WHERE (CompanyID = @CompanyID) ORDER BY CompanyName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@CompanyName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CompanyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_CompanyName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CompanyName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CompanyName" DataSetColumn="CompanyName" />
              <Mapping SourceColumn="CompanyID" DataSetColumn="CompanyID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [TableCompany] ([CompanyName], [CompanyID]) VALUES (@CompanyName, @CompanyID);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CompanyName" ColumnName="CompanyName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableCompany" DataTypeServer="nchar(30)" DbType="String" Direction="Input" ParameterName="@CompanyName" Precision="0" ProviderType="NChar" Scale="0" Size="30" SourceColumn="CompanyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CompanyID" ColumnName="CompanyID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableCompany" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM TableCompany</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [TableCompany] SET [CompanyName] = @CompanyName WHERE (([CompanyID] = @Original_CompanyID));
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CompanyName" ColumnName="CompanyName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableCompany" DataTypeServer="nchar(30)" DbType="String" Direction="Input" ParameterName="@CompanyName" Precision="0" ProviderType="NChar" Scale="0" Size="30" SourceColumn="CompanyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_CompanyID" ColumnName="CompanyID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableCompany" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_CompanyID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CompanyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableCountryTableAdapter" GeneratorDataComponentClassName="TableCountryTableAdapter" Name="TableCountry" UserDataComponentName="TableCountryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableCountry" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [TableCountry] WHERE (([CountryName] = @Original_CountryName) AND ([CountryID] = @Original_CountryID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_CountryName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [TableCountry] ([CountryName], [CountryID]) VALUES (@CountryName, @CountryID);
SELECT CountryName, CountryID FROM TableCountry WHERE (CountryID = @CountryID) ORDER BY CountryName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@CountryName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     CountryName, CountryID
FROM         TableCountry
ORDER BY CountryName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [TableCountry] SET [CountryName] = @CountryName, [CountryID] = @CountryID WHERE (([CountryName] = @Original_CountryName) AND ([CountryID] = @Original_CountryID));
SELECT CountryName, CountryID FROM TableCountry WHERE (CountryID = @CountryID) ORDER BY CountryName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@CountryName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_CountryName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CountryName" DataSetColumn="CountryName" />
              <Mapping SourceColumn="CountryID" DataSetColumn="CountryID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [TableCountry] ([CountryName], [CountryID]) VALUES (@CountryName, @CountryID);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CountryName" ColumnName="CountryName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableCountry" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@CountryName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CountryID" ColumnName="CountryID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableCountry" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM TableCountry</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [TableCountry] SET [CountryName] = @CountryName WHERE (([CountryID] = @Original_CountryID));
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="CountryName" ColumnName="CountryName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableCountry" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@CountryName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="CountryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_CountryID" ColumnName="CountryID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableCountry" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableGroupTableAdapter" GeneratorDataComponentClassName="TableGroupTableAdapter" Name="TableGroup" UserDataComponentName="TableGroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [TableGroup] WHERE (([GroupID] = @Original_GroupID) AND ([GroupName] = @Original_GroupName) AND ((@IsNull_GroupSite = 1 AND [GroupSite] IS NULL) OR ([GroupSite] = @Original_GroupSite)) AND ((@IsNull_CountryID = 1 AND [CountryID] IS NULL) OR ([CountryID] = @Original_CountryID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupSite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupSite" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupSite" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupSite" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CountryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [TableGroup] ([GroupID], [GroupName], [GroupSite], [CountryID]) VALUES (@GroupID, @GroupName, @GroupSite, @CountryID);
SELECT GroupID, GroupName, GroupSite, CountryID FROM TableGroup WHERE (GroupID = @GroupID) ORDER BY GroupName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupSite" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupSite" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     GroupID, GroupName, GroupSite, CountryID
FROM         TableGroup
ORDER BY GroupName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [TableGroup] SET [GroupID] = @GroupID, [GroupName] = @GroupName, [GroupSite] = @GroupSite, [CountryID] = @CountryID WHERE (([GroupID] = @Original_GroupID) AND ([GroupName] = @Original_GroupName) AND ((@IsNull_GroupSite = 1 AND [GroupSite] IS NULL) OR ([GroupSite] = @Original_GroupSite)) AND ((@IsNull_CountryID = 1 AND [CountryID] IS NULL) OR ([CountryID] = @Original_CountryID)));
SELECT GroupID, GroupName, GroupSite, CountryID FROM TableGroup WHERE (GroupID = @GroupID) ORDER BY GroupName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupSite" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupSite" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupSite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupSite" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupSite" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupSite" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CountryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="GroupName" DataSetColumn="GroupName" />
              <Mapping SourceColumn="GroupSite" DataSetColumn="GroupSite" />
              <Mapping SourceColumn="CountryID" DataSetColumn="CountryID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>BEGIN TRANSACTION
DELETE FROM [TableSong] WHERE [AlbumID] IN (SELECT AlbumID FROM TableAlbum WHERE  (([GroupID] = @Original_GroupID)))
DELETE FROM [TableAlbum] WHERE (([GroupID] = @Original_GroupID))
DELETE FROM [TableMemGroup] WHERE (([GroupID] = @Original_GroupID))
DELETE FROM [TableGroup] WHERE (([GroupID] = @Original_GroupID))
COMMIT TRANSACTION</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_GroupID" ColumnName="GroupID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy5" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy5" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     GroupID, GroupName, GroupSite, CountryID
FROM         TableGroup
WHERE CountryID = @CountryID
ORDER BY GroupName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="CountryID" ColumnName="CountryID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO TableGroup
                      (GroupID, GroupName, GroupSite, CountryID)
VALUES     (@GroupID,@GroupName,@GroupSite,@CountryID); 
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupID" ColumnName="GroupID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupName" ColumnName="GroupName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="GroupSite" ColumnName="GroupSite" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@GroupSite" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="GroupSite" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CountryID" ColumnName="CountryID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM TableGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery1" Modifier="Public" Name="ScalarQuery1" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="ScalarQuery1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT MAX(GroupID) FROM TableGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery2" Modifier="Public" Name="ScalarQuery2" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="ScalarQuery2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(GroupID) FROM TableGroup
WHERE CountryID = @CountryID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="CountryID" ColumnName="CountryID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy2" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy6" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [TableGroup] SET  [GroupName] = @GroupName, [GroupSite] = @GroupSite, [CountryID] = @CountryID WHERE (([GroupID] = @Original_GroupID));
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupName" ColumnName="GroupName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@GroupName" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="GroupName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="GroupSite" ColumnName="GroupSite" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@GroupSite" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="GroupSite" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CountryID" ColumnName="CountryID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@CountryID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="CountryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_GroupID" ColumnName="GroupID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableGroup" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableStatusTableAdapter" GeneratorDataComponentClassName="TableStatusTableAdapter" Name="TableStatus" UserDataComponentName="TableStatusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableStatus" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [TableStatus] WHERE (([StatusName] = @Original_StatusName) AND ([StatusID] = @Original_StatusID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_StatusName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="StatusName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [TableStatus] ([StatusName], [StatusID]) VALUES (@StatusName, @StatusID);
SELECT StatusName, StatusID FROM TableStatus WHERE (StatusID = @StatusID) ORDER BY StatusName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@StatusName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="StatusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     StatusName, StatusID
FROM         TableStatus
ORDER BY StatusName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [TableStatus] SET [StatusName] = @StatusName, [StatusID] = @StatusID WHERE (([StatusName] = @Original_StatusName) AND ([StatusID] = @Original_StatusID));
SELECT StatusName, StatusID FROM TableStatus WHERE (StatusID = @StatusID) ORDER BY StatusName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@StatusName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="StatusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_StatusName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="StatusName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StatusName" DataSetColumn="StatusName" />
              <Mapping SourceColumn="StatusID" DataSetColumn="StatusID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[TableStatus] ([StatusName], [StatusID]) VALUES (@StatusName, @StatusID);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StatusName" ColumnName="StatusName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableStatus" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@StatusName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="StatusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StatusID" ColumnName="StatusID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableStatus" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM TableStatus</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[TableStatus] SET [StatusName] = @StatusName WHERE (([StatusID] = @Original_StatusID));
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StatusName" ColumnName="StatusName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableStatus" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@StatusName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="StatusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_StatusID" ColumnName="StatusID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableStatus" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableStyleTableAdapter" GeneratorDataComponentClassName="TableStyleTableAdapter" Name="TableStyle" UserDataComponentName="TableStyleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableStyle" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [TableStyle] WHERE (([StyleName] = @Original_StyleName) AND ([StyleID] = @Original_StyleID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_StyleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="StyleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [TableStyle] ([StyleName], [StyleID]) VALUES (@StyleName, @StyleID);
SELECT StyleName, StyleID FROM TableStyle WHERE (StyleID = @StyleID) ORDER BY StyleName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@StyleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="StyleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     StyleName, StyleID
FROM         TableStyle
ORDER BY StyleName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [TableStyle] SET [StyleName] = @StyleName, [StyleID] = @StyleID WHERE (([StyleName] = @Original_StyleName) AND ([StyleID] = @Original_StyleID));
SELECT StyleName, StyleID FROM TableStyle WHERE (StyleID = @StyleID) ORDER BY StyleName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@StyleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="StyleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_StyleName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="StyleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StyleName" DataSetColumn="StyleName" />
              <Mapping SourceColumn="StyleID" DataSetColumn="StyleID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [TableStyle] ([StyleName], [StyleID]) VALUES (@StyleName, @StyleID);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StyleName" ColumnName="StyleName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableStyle" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@StyleName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="StyleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StyleID" ColumnName="StyleID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableStyle" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM TableStyle</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [TableStyle] SET [StyleName] = @StyleName WHERE (([StyleID] = @Original_StyleID));</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StyleName" ColumnName="StyleName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableStyle" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@StyleName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="StyleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_StyleID" ColumnName="StyleID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableStyle" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_StyleID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StyleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableSongTableAdapter" GeneratorDataComponentClassName="TableSongTableAdapter" Name="TableSong" UserDataComponentName="TableSongTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableSong" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TableSong] WHERE (([SongName] = @Original_SongName) AND ((@IsNull_SongTime = 1 AND [SongTime] IS NULL) OR ([SongTime] = @Original_SongTime)) AND ([AlbumID] = @Original_AlbumID) AND ([SongID] = @Original_SongID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SongName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SongTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SongTime" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SongTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TableSong] ([SongName], [SongTime], [AlbumID], [SongID]) VALUES (@SongName, @SongTime, @AlbumID, @SongID);
SELECT SongName, SongTime, AlbumID, SongID FROM TableSong WHERE (SongID = @SongID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SongName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SongTime" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SongTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SongName, SongTime, AlbumID, SongID FROM dbo.TableSong </CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TableSong] SET [SongName] = @SongName, [SongTime] = @SongTime, [AlbumID] = @AlbumID, [SongID] = @SongID WHERE (([SongName] = @Original_SongName) AND ((@IsNull_SongTime = 1 AND [SongTime] IS NULL) OR ([SongTime] = @Original_SongTime)) AND ([AlbumID] = @Original_AlbumID) AND ([SongID] = @Original_SongID));
SELECT SongName, SongTime, AlbumID, SongID FROM TableSong WHERE (SongID = @SongID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SongName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SongTime" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SongTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SongName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SongTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SongTime" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SongTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SongName" DataSetColumn="SongName" />
              <Mapping SourceColumn="SongTime" DataSetColumn="SongTime" />
              <Mapping SourceColumn="AlbumID" DataSetColumn="AlbumID" />
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[TableSong] WHERE (([SongID] = @Original_SongID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_SongID" ColumnName="SongID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableSong" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy3" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy3" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT SongName, SongTime, AlbumID, SongID FROM dbo.TableSong WHERE ((AlbumID = @AlbumID));</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AlbumID" ColumnName="AlbumID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[TableSong] ([SongName], [SongTime], [AlbumID], [SongID]) VALUES (@SongName, @SongTime, @AlbumID, @SongID);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SongName" ColumnName="SongName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@SongName" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="SongTime" ColumnName="SongTime" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="nchar(5)" DbType="String" Direction="Input" ParameterName="@SongTime" Precision="0" ProviderType="NChar" Scale="0" Size="5" SourceColumn="SongTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AlbumID" ColumnName="AlbumID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SongID" ColumnName="SongID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM TableSong
WHERE ((AlbumID = @AlbumID));</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="AlbumID" ColumnName="AlbumID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery1" Modifier="Public" Name="ScalarQuery1" QueryType="Scalar" ScalarCallRetval="System.Int16, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="ScalarQuery1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT MAX(SongID) FROM TableSong</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy6" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[TableSong] SET [SongName] = @SongName, [SongTime] = @SongTime WHERE (([SongID] = @Original_SongID));
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SongName" ColumnName="SongName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@SongName" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="SongTime" ColumnName="SongTime" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="nchar(5)" DbType="String" Direction="Input" ParameterName="@SongTime" Precision="0" ProviderType="NChar" Scale="0" Size="5" SourceColumn="SongTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_SongID" ColumnName="SongID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableSong" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableMemGroupTableAdapter" GeneratorDataComponentClassName="TableMemGroupTableAdapter" Name="TableMemGroup" UserDataComponentName="TableMemGroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableMemGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [TableMemGroup] WHERE (([GroupID] = @Original_GroupID) AND ([MemName] = @Original_MemName) AND ((@IsNull_StatusID = 1 AND [StatusID] IS NULL) OR ([StatusID] = @Original_StatusID)) AND ([MemID] = @Original_MemID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_MemName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MemName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_MemID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MemID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [TableMemGroup] ([GroupID], [MemName], [StatusID], [MemID]) VALUES (@GroupID, @MemName, @StatusID, @MemID);
SELECT GroupID, MemName, StatusID, MemID FROM TableMemGroup WHERE (MemID = @MemID) ORDER BY MemName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@MemName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@MemID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MemID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     GroupID, MemName, StatusID, MemID
FROM         TableMemGroup
ORDER BY MemName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [TableMemGroup] SET [GroupID] = @GroupID, [MemName] = @MemName, [StatusID] = @StatusID, [MemID] = @MemID WHERE (([GroupID] = @Original_GroupID) AND ([MemName] = @Original_MemName) AND ((@IsNull_StatusID = 1 AND [StatusID] IS NULL) OR ([StatusID] = @Original_StatusID)) AND ([MemID] = @Original_MemID));
SELECT GroupID, MemName, StatusID, MemID FROM TableMemGroup WHERE (MemID = @MemID) ORDER BY MemName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@MemName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@MemID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MemID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_MemName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="MemName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_MemID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="MemID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="MemName" DataSetColumn="MemName" />
              <Mapping SourceColumn="StatusID" DataSetColumn="StatusID" />
              <Mapping SourceColumn="MemID" DataSetColumn="MemID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[TableMemGroup] WHERE (([MemID] = @Original_MemID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_MemID" ColumnName="MemID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_MemID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="MemID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableMemGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy2" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy2" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     GroupID, MemID, MemName, StatusID
FROM         TableMemGroup
WHERE     (GroupID = @GroupID)
ORDER BY MemName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupID" ColumnName="GroupID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.TableMemGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy7" GeneratorSourceName="FillBy1" GetMethodModifier="Public" GetMethodName="GetDataBy7" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy7" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     GroupID, MemName, StatusID, MemID
FROM         TableMemGroup
WHERE StatusID = @StatusID
ORDER BY MemName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="StatusID" ColumnName="StatusID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[TableMemGroup] ([GroupID], [MemName], [StatusID], [MemID]) VALUES (@GroupID, @MemName, @StatusID, @MemID);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupID" ColumnName="GroupID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MemName" ColumnName="MemName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@MemName" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="MemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="StatusID" ColumnName="StatusID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MemID" ColumnName="MemID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@MemID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="MemID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM TableMemGroup
WHERE ((GroupID = @GroupID));</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupID" ColumnName="GroupID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery1" Modifier="Public" Name="ScalarQuery1" QueryType="Scalar" ScalarCallRetval="System.Int16, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="ScalarQuery1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT MAX(MemID) FROM TableMemGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery2" Modifier="Public" Name="ScalarQuery2" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy6" UserSourceName="ScalarQuery2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(MemID) FROM TableMemGroup
WHERE StatusID = @StatusID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="StatusID" ColumnName="StatusID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy8" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[TableMemGroup] SET [MemName] = @MemName, [StatusID] = @StatusID 
WHERE (([MemID] = @Original_MemID));
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="MemName" ColumnName="MemName" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="nchar(40)" DbType="String" Direction="Input" ParameterName="@MemName" Precision="0" ProviderType="NChar" Scale="0" Size="40" SourceColumn="MemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="StatusID" ColumnName="StatusID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@StatusID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="StatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_MemID" ColumnName="MemID" DataSourceName="[E:\C# &amp; DELPHI\BD\DATABASE\DATABASE.MDF].dbo.TableMemGroup" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@Original_MemID" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="MemID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSetAlbums" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DataSetAlbums" msprop:Generator_DataSetName="DataSetAlbums" msprop:EnableTableAdapterManager="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TableAlbum" msprop:Generator_UserTableName="TableAlbum" msprop:Generator_RowDeletedName="TableAlbumRowDeleted" msprop:Generator_RowChangedName="TableAlbumRowChanged" msprop:Generator_RowClassName="TableAlbumRow" msprop:Generator_RowChangingName="TableAlbumRowChanging" msprop:Generator_RowEvArgName="TableAlbumRowChangeEvent" msprop:Generator_RowEvHandlerName="TableAlbumRowChangeEventHandler" msprop:Generator_TableClassName="TableAlbumDataTable" msprop:Generator_TableVarName="tableTableAlbum" msprop:Generator_RowDeletingName="TableAlbumRowDeleting" msprop:Generator_TablePropName="TableAlbum">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AlbumName" msprop:Generator_UserColumnName="AlbumName" msprop:Generator_ColumnPropNameInRow="AlbumName" msprop:Generator_ColumnVarNameInTable="columnAlbumName" msprop:Generator_ColumnPropNameInTable="AlbumNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AlbumYear" msprop:Generator_UserColumnName="AlbumYear" msprop:Generator_ColumnPropNameInRow="AlbumYear" msprop:Generator_ColumnVarNameInTable="columnAlbumYear" msprop:Generator_ColumnPropNameInTable="AlbumYearColumn" type="xs:short" />
              <xs:element name="AlbumQSongs" msprop:Generator_UserColumnName="AlbumQSongs" msprop:Generator_ColumnPropNameInRow="AlbumQSongs" msprop:Generator_ColumnVarNameInTable="columnAlbumQSongs" msprop:Generator_ColumnPropNameInTable="AlbumQSongsColumn" type="xs:short" minOccurs="0" />
              <xs:element name="GroupID" msprop:Generator_UserColumnName="GroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" type="xs:int" />
              <xs:element name="AlbumID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="AlbumID" msprop:Generator_ColumnPropNameInRow="AlbumID" msprop:Generator_ColumnVarNameInTable="columnAlbumID" msprop:Generator_ColumnPropNameInTable="AlbumIDColumn" type="xs:short" />
              <xs:element name="CompanyID" msprop:Generator_UserColumnName="CompanyID" msprop:Generator_ColumnPropNameInRow="CompanyID" msprop:Generator_ColumnVarNameInTable="columnCompanyID" msprop:Generator_ColumnPropNameInTable="CompanyIDColumn" type="xs:short" minOccurs="0" />
              <xs:element name="StyleID" msprop:Generator_UserColumnName="StyleID" msprop:Generator_ColumnPropNameInRow="StyleID" msprop:Generator_ColumnVarNameInTable="columnStyleID" msprop:Generator_ColumnPropNameInTable="StyleIDColumn" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TableCompany" msprop:Generator_UserTableName="TableCompany" msprop:Generator_RowDeletedName="TableCompanyRowDeleted" msprop:Generator_RowChangedName="TableCompanyRowChanged" msprop:Generator_RowClassName="TableCompanyRow" msprop:Generator_RowChangingName="TableCompanyRowChanging" msprop:Generator_RowEvArgName="TableCompanyRowChangeEvent" msprop:Generator_RowEvHandlerName="TableCompanyRowChangeEventHandler" msprop:Generator_TableClassName="TableCompanyDataTable" msprop:Generator_TableVarName="tableTableCompany" msprop:Generator_RowDeletingName="TableCompanyRowDeleting" msprop:Generator_TablePropName="TableCompany">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CompanyName" msprop:Generator_UserColumnName="CompanyName" msprop:Generator_ColumnPropNameInRow="CompanyName" msprop:Generator_ColumnVarNameInTable="columnCompanyName" msprop:Generator_ColumnPropNameInTable="CompanyNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CompanyID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="CompanyID" msprop:Generator_ColumnPropNameInRow="CompanyID" msprop:Generator_ColumnVarNameInTable="columnCompanyID" msprop:Generator_ColumnPropNameInTable="CompanyIDColumn" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TableCountry" msprop:Generator_UserTableName="TableCountry" msprop:Generator_RowDeletedName="TableCountryRowDeleted" msprop:Generator_RowChangedName="TableCountryRowChanged" msprop:Generator_RowClassName="TableCountryRow" msprop:Generator_RowChangingName="TableCountryRowChanging" msprop:Generator_RowEvArgName="TableCountryRowChangeEvent" msprop:Generator_RowEvHandlerName="TableCountryRowChangeEventHandler" msprop:Generator_TableClassName="TableCountryDataTable" msprop:Generator_TableVarName="tableTableCountry" msprop:Generator_RowDeletingName="TableCountryRowDeleting" msprop:Generator_TablePropName="TableCountry">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CountryName" msprop:Generator_UserColumnName="CountryName" msprop:Generator_ColumnPropNameInRow="CountryName" msprop:Generator_ColumnVarNameInTable="columnCountryName" msprop:Generator_ColumnPropNameInTable="CountryNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CountryID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="CountryID" msprop:Generator_ColumnPropNameInRow="CountryID" msprop:Generator_ColumnVarNameInTable="columnCountryID" msprop:Generator_ColumnPropNameInTable="CountryIDColumn" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TableGroup" msprop:Generator_UserTableName="TableGroup" msprop:Generator_RowDeletedName="TableGroupRowDeleted" msprop:Generator_RowChangedName="TableGroupRowChanged" msprop:Generator_RowClassName="TableGroupRow" msprop:Generator_RowChangingName="TableGroupRowChanging" msprop:Generator_RowEvArgName="TableGroupRowChangeEvent" msprop:Generator_RowEvHandlerName="TableGroupRowChangeEventHandler" msprop:Generator_TableClassName="TableGroupDataTable" msprop:Generator_TableVarName="tableTableGroup" msprop:Generator_RowDeletingName="TableGroupRowDeleting" msprop:Generator_TablePropName="TableGroup">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="GroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" type="xs:int" />
              <xs:element name="GroupName" msprop:Generator_UserColumnName="GroupName" msprop:Generator_ColumnPropNameInRow="GroupName" msprop:Generator_ColumnVarNameInTable="columnGroupName" msprop:Generator_ColumnPropNameInTable="GroupNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupSite" msprop:Generator_UserColumnName="GroupSite" msprop:Generator_ColumnPropNameInRow="GroupSite" msprop:Generator_ColumnVarNameInTable="columnGroupSite" msprop:Generator_ColumnPropNameInTable="GroupSiteColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CountryID" msprop:Generator_UserColumnName="CountryID" msprop:Generator_ColumnPropNameInRow="CountryID" msprop:Generator_ColumnVarNameInTable="columnCountryID" msprop:Generator_ColumnPropNameInTable="CountryIDColumn" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TableStatus" msprop:Generator_UserTableName="TableStatus" msprop:Generator_RowDeletedName="TableStatusRowDeleted" msprop:Generator_RowChangedName="TableStatusRowChanged" msprop:Generator_RowClassName="TableStatusRow" msprop:Generator_RowChangingName="TableStatusRowChanging" msprop:Generator_RowEvArgName="TableStatusRowChangeEvent" msprop:Generator_RowEvHandlerName="TableStatusRowChangeEventHandler" msprop:Generator_TableClassName="TableStatusDataTable" msprop:Generator_TableVarName="tableTableStatus" msprop:Generator_RowDeletingName="TableStatusRowDeleting" msprop:Generator_TablePropName="TableStatus">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StatusName" msprop:Generator_UserColumnName="StatusName" msprop:Generator_ColumnPropNameInRow="StatusName" msprop:Generator_ColumnVarNameInTable="columnStatusName" msprop:Generator_ColumnPropNameInTable="StatusNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StatusID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="StatusID" msprop:Generator_ColumnPropNameInRow="StatusID" msprop:Generator_ColumnVarNameInTable="columnStatusID" msprop:Generator_ColumnPropNameInTable="StatusIDColumn" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TableStyle" msprop:Generator_UserTableName="TableStyle" msprop:Generator_RowDeletedName="TableStyleRowDeleted" msprop:Generator_RowChangedName="TableStyleRowChanged" msprop:Generator_RowClassName="TableStyleRow" msprop:Generator_RowChangingName="TableStyleRowChanging" msprop:Generator_RowEvArgName="TableStyleRowChangeEvent" msprop:Generator_RowEvHandlerName="TableStyleRowChangeEventHandler" msprop:Generator_TableClassName="TableStyleDataTable" msprop:Generator_TableVarName="tableTableStyle" msprop:Generator_RowDeletingName="TableStyleRowDeleting" msprop:Generator_TablePropName="TableStyle">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StyleName" msprop:Generator_UserColumnName="StyleName" msprop:Generator_ColumnPropNameInRow="StyleName" msprop:Generator_ColumnVarNameInTable="columnStyleName" msprop:Generator_ColumnPropNameInTable="StyleNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StyleID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="StyleID" msprop:Generator_ColumnPropNameInRow="StyleID" msprop:Generator_ColumnVarNameInTable="columnStyleID" msprop:Generator_ColumnPropNameInTable="StyleIDColumn" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TableSong" msprop:Generator_UserTableName="TableSong" msprop:Generator_RowDeletedName="TableSongRowDeleted" msprop:Generator_RowChangedName="TableSongRowChanged" msprop:Generator_RowClassName="TableSongRow" msprop:Generator_RowChangingName="TableSongRowChanging" msprop:Generator_RowEvArgName="TableSongRowChangeEvent" msprop:Generator_RowEvHandlerName="TableSongRowChangeEventHandler" msprop:Generator_TableClassName="TableSongDataTable" msprop:Generator_TableVarName="tableTableSong" msprop:Generator_RowDeletingName="TableSongRowDeleting" msprop:Generator_TablePropName="TableSong">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SongName" msprop:Generator_UserColumnName="SongName" msprop:Generator_ColumnVarNameInTable="columnSongName" msprop:Generator_ColumnPropNameInRow="SongName" msprop:Generator_ColumnPropNameInTable="SongNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SongTime" msprop:Generator_UserColumnName="SongTime" msprop:Generator_ColumnVarNameInTable="columnSongTime" msprop:Generator_ColumnPropNameInRow="SongTime" msprop:Generator_ColumnPropNameInTable="SongTimeColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AlbumID" msprop:Generator_UserColumnName="AlbumID" msprop:Generator_ColumnVarNameInTable="columnAlbumID" msprop:Generator_ColumnPropNameInRow="AlbumID" msprop:Generator_ColumnPropNameInTable="AlbumIDColumn" type="xs:short" />
              <xs:element name="SongID" msprop:Generator_UserColumnName="SongID" msprop:Generator_ColumnVarNameInTable="columnSongID" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TableMemGroup" msprop:Generator_UserTableName="TableMemGroup" msprop:Generator_RowDeletedName="TableMemGroupRowDeleted" msprop:Generator_RowChangedName="TableMemGroupRowChanged" msprop:Generator_RowClassName="TableMemGroupRow" msprop:Generator_RowChangingName="TableMemGroupRowChanging" msprop:Generator_RowEvArgName="TableMemGroupRowChangeEvent" msprop:Generator_RowEvHandlerName="TableMemGroupRowChangeEventHandler" msprop:Generator_TableClassName="TableMemGroupDataTable" msprop:Generator_TableVarName="tableTableMemGroup" msprop:Generator_RowDeletingName="TableMemGroupRowDeleting" msprop:Generator_TablePropName="TableMemGroup">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupID" msprop:Generator_UserColumnName="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" type="xs:int" />
              <xs:element name="MemName" msprop:Generator_UserColumnName="MemName" msprop:Generator_ColumnVarNameInTable="columnMemName" msprop:Generator_ColumnPropNameInRow="MemName" msprop:Generator_ColumnPropNameInTable="MemNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StatusID" msprop:Generator_UserColumnName="StatusID" msprop:Generator_ColumnVarNameInTable="columnStatusID" msprop:Generator_ColumnPropNameInRow="StatusID" msprop:Generator_ColumnPropNameInTable="StatusIDColumn" type="xs:short" minOccurs="0" />
              <xs:element name="MemID" msprop:Generator_UserColumnName="MemID" msprop:Generator_ColumnVarNameInTable="columnMemID" msprop:Generator_ColumnPropNameInRow="MemID" msprop:Generator_ColumnPropNameInTable="MemIDColumn" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TableAlbum" />
      <xs:field xpath="mstns:AlbumID" />
    </xs:unique>
    <xs:unique name="TableCompany_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TableCompany" />
      <xs:field xpath="mstns:CompanyID" />
    </xs:unique>
    <xs:unique name="TableCountry_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TableCountry" />
      <xs:field xpath="mstns:CountryID" />
    </xs:unique>
    <xs:unique name="TableGroup_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TableGroup" />
      <xs:field xpath="mstns:GroupID" />
    </xs:unique>
    <xs:unique name="TableStatus_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TableStatus" />
      <xs:field xpath="mstns:StatusID" />
    </xs:unique>
    <xs:unique name="TableStyle_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TableStyle" />
      <xs:field xpath="mstns:StyleID" />
    </xs:unique>
    <xs:unique name="TableSong_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TableSong" />
      <xs:field xpath="mstns:SongID" />
    </xs:unique>
    <xs:unique name="TableMemGroup_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TableMemGroup" />
      <xs:field xpath="mstns:MemID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_TableAlbum_TableCompany" msdata:parent="TableCompany" msdata:child="TableAlbum" msdata:parentkey="CompanyID" msdata:childkey="CompanyID" msprop:Generator_UserRelationName="FK_TableAlbum_TableCompany" msprop:Generator_RelationVarName="relationFK_TableAlbum_TableCompany" msprop:Generator_UserChildTable="TableAlbum" msprop:Generator_UserParentTable="TableCompany" msprop:Generator_ParentPropName="TableCompanyRow" msprop:Generator_ChildPropName="GetTableAlbumRows" />
      <msdata:Relationship name="FK_TableAlbum_TableGroup" msdata:parent="TableGroup" msdata:child="TableAlbum" msdata:parentkey="GroupID" msdata:childkey="GroupID" msprop:Generator_UserRelationName="FK_TableAlbum_TableGroup" msprop:Generator_RelationVarName="relationFK_TableAlbum_TableGroup" msprop:Generator_UserChildTable="TableAlbum" msprop:Generator_UserParentTable="TableGroup" msprop:Generator_ParentPropName="TableGroupRow" msprop:Generator_ChildPropName="GetTableAlbumRows" />
      <msdata:Relationship name="FK_TableGroup_TableCountry" msdata:parent="TableCountry" msdata:child="TableGroup" msdata:parentkey="CountryID" msdata:childkey="CountryID" msprop:Generator_UserRelationName="FK_TableGroup_TableCountry" msprop:Generator_RelationVarName="relationFK_TableGroup_TableCountry" msprop:Generator_UserChildTable="TableGroup" msprop:Generator_UserParentTable="TableCountry" msprop:Generator_ParentPropName="TableCountryRow" msprop:Generator_ChildPropName="GetTableGroupRows" />
      <msdata:Relationship name="FK_TableAlbum_TableStyle" msdata:parent="TableStyle" msdata:child="TableAlbum" msdata:parentkey="StyleID" msdata:childkey="StyleID" msprop:Generator_UserRelationName="FK_TableAlbum_TableStyle" msprop:Generator_RelationVarName="relationFK_TableAlbum_TableStyle" msprop:Generator_UserChildTable="TableAlbum" msprop:Generator_UserParentTable="TableStyle" msprop:Generator_ParentPropName="TableStyleRow" msprop:Generator_ChildPropName="GetTableAlbumRows" />
      <msdata:Relationship name="FK_TableSong_TableAlbum" msdata:parent="TableAlbum" msdata:child="TableSong" msdata:parentkey="AlbumID" msdata:childkey="AlbumID" msprop:Generator_UserRelationName="FK_TableSong_TableAlbum" msprop:Generator_RelationVarName="relationFK_TableSong_TableAlbum" msprop:Generator_UserChildTable="TableSong" msprop:Generator_UserParentTable="TableAlbum" msprop:Generator_ParentPropName="TableAlbumRow" msprop:Generator_ChildPropName="GetTableSongRows" />
      <msdata:Relationship name="FK_TableMemGroup_TableGroup" msdata:parent="TableGroup" msdata:child="TableMemGroup" msdata:parentkey="GroupID" msdata:childkey="GroupID" msprop:Generator_UserRelationName="FK_TableMemGroup_TableGroup" msprop:Generator_RelationVarName="relationFK_TableMemGroup_TableGroup" msprop:Generator_UserChildTable="TableMemGroup" msprop:Generator_UserParentTable="TableGroup" msprop:Generator_ParentPropName="TableGroupRow" msprop:Generator_ChildPropName="GetTableMemGroupRows" />
      <msdata:Relationship name="FK_TableMemGroup_TableStatus" msdata:parent="TableStatus" msdata:child="TableMemGroup" msdata:parentkey="StatusID" msdata:childkey="StatusID" msprop:Generator_UserRelationName="FK_TableMemGroup_TableStatus" msprop:Generator_RelationVarName="relationFK_TableMemGroup_TableStatus" msprop:Generator_UserChildTable="TableMemGroup" msprop:Generator_UserParentTable="TableStatus" msprop:Generator_ParentPropName="TableStatusRow" msprop:Generator_ChildPropName="GetTableMemGroupRows" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>